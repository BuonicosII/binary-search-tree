(()=>{"use strict";class t{constructor(t){this.value=t,this.left=null,this.right=null}}function e(l){if(2===l.length){let e=new t(l[1]);return e.left=new t(l[0]),e}if(1===l.length)return new t(l[0]);{let n=new t(l[Math.floor(l.length/2)]);return n.left=e(l.slice(0,Math.floor(l.length/2))),n.right=e(l.slice(Math.floor(l.length/2)+1,l.length)),n}}function l(t){if(t.length<2)return t;{let e=l(t.slice(0,Math.floor(t.length/2))),n=l(t.slice(Math.floor(t.length/2),t.length)),r=[];for(;e.length>0&&n.length>0;)e[0]>n[0]?(r.push(n[0]),n.shift()):e[0]===n[0]?(r.push(n[0]),e.shift(),n.shift()):(r.push(e[0]),e.shift());for(;e.length>0;)r.push(e[0]),e.shift();for(;n.length>0;)r.push(n[0]),n.shift();return r}}let n=new class{constructor(t){const n=l(t);this.root=e(n)}insert(e){!function l(n){return n.value===e?void 0:e<n.value&&null===n.left?void(n.left=new t(e)):e<n.value?void l(n.left):void l(n.right)}(this.root)}remove(t){!function t(e,l){if(null===e)return e;if(l>e.value)e.right=t(e.right,l);else{if(!(l<e.value)){if(null===e.left)return e.right;if(null===e.right)return e.left;{let l=e.right;for(;null!==l.left;)l=l.left;return t(e.right,l.value),e.value=l.value,e}}e.left=t(e.left,l)}return e}(this.root,t)}find(t){return function t(e,l){return null===e?"Not found":l>e.value?t(e.right,l):l<e.value?t(e.left,l):e}(this.root,t)}levelOrder(t){return function t(e,l,n=[],r=[]){if(void 0===l){if(null===e)return;for(r.push(e),n.push(e.left),n.push(e.right);n.length>0;){let e=n[0];n.shift(),t(e,void 0,n,r)}return r}if(null!==e){for(l(e),n.push(e.left),n.push(e.right);n.length>0;){let e=n[0];n.shift(),t(e,l,n,r)}return r}}(this.root,t)}inOrder(t){function e(t,l){if(void 0===l){const l=[];return null===t?l:(l.push(t.value),e(t.left).concat(l.concat(e(t.right))))}null!==t&&(e(t.left,l),l(t.value),e(t.right,l))}if(void 0===t)return e(this.root);e(this.root,t)}preOrder(t){function e(t,l){if(void 0===l){const l=[];return null===t?l:(l.push(t.value),l.concat(e(t.left).concat(e(t.right))))}null!==t&&(l(t.value),e(t.left,l),e(t.right,l))}if(void 0===t)return e(this.root);e(this.root,t)}postOrder(t){function e(t,l){if(void 0===l){const l=[];return null===t?l:(l.push(t.value),e(t.left).concat(e(t.right).concat(l)))}null!==t&&(e(t.left,l),e(t.right,l),l(t.value))}if(void 0===t)return e(this.root);e(this.root,t)}height(t){return"Not found"===this.find(t)?"Can't find the height of a node not in the tree":function t(e){let l=0;if(null===e)return l;if(null===e.left&&null===e.right)return l;{l+=1;let n=t(e.left),r=t(e.right);return n>=r?l+n:l+r}}(this.find(t))}depth(t){return"Not found"===this.find(t)?"Can't find the depth of a node not in the tree":function t(e,l){let n=0;return null===e?n:l>e.value?(n+=1,n+t(e.right,l)):l<e.value?(n+=1,n+t(e.left,l)):n}(this.root,t)}}([7,8,3,5,2,1,9,4,6,90,56,34,22,23,11]);const r=(t,e="",l=!0)=>{null!==t&&(null!==t.right&&r(t.right,`${e}${l?"│   ":"    "}`,!1),console.log(`${e}${l?"└── ":"┌── "}${t.value}`),null!==t.left&&r(t.left,`${e}${l?"    ":"│   "}`,!0))};r(n.root),console.log(n.depth(4))})();