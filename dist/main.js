(()=>{"use strict";class t{constructor(t){this.value=t,this.left=null,this.right=null}}function e(l){if(2===l.length){let e=new t(l[1]);return e.left=new t(l[0]),e}if(1===l.length)return new t(l[0]);{let r=new t(l[Math.floor(l.length/2)]);return r.left=e(l.slice(0,Math.floor(l.length/2))),r.right=e(l.slice(Math.floor(l.length/2)+1,l.length)),r}}function l(t){if(t.length<2)return t;{let e=l(t.slice(0,Math.floor(t.length/2))),r=l(t.slice(Math.floor(t.length/2),t.length)),n=[];for(;e.length>0&&r.length>0;)e[0]>r[0]?(n.push(r[0]),r.shift()):e[0]===r[0]?(n.push(r[0]),e.shift(),r.shift()):(n.push(e[0]),e.shift());for(;e.length>0;)n.push(e[0]),e.shift();for(;r.length>0;)n.push(r[0]),r.shift();return n}}class r{constructor(t){const r=l(t);this.root=e(r)}insert(e){!function l(r){return r.value===e?void 0:e<r.value&&null===r.left?void(r.left=new t(e)):e<r.value?void l(r.left):e>r.value&&null===r.right?void(r.right=new t(e)):void l(r.right)}(this.root)}remove(t){!function t(e,l){if(null===e)return e;if(l>e.value)e.right=t(e.right,l);else{if(!(l<e.value)){if(null===e.left)return e.right;if(null===e.right)return e.left;{let l=e.right;for(;null!==l.left;)l=l.left;return t(e.right,l.value),e.value=l.value,e}}e.left=t(e.left,l)}return e}(this.root,t)}find(t){return function t(e,l){return null===e?"Not found":l>e.value?t(e.right,l):l<e.value?t(e.left,l):e}(this.root,t)}levelOrder(t){return function t(e,l,r=[],n=[]){if(void 0===l){if(null===e)return;for(n.push(e),r.push(e.left),r.push(e.right);r.length>0;){let e=r[0];r.shift(),t(e,void 0,r,n)}return n}if(null!==e){for(l(e),r.push(e.left),r.push(e.right);r.length>0;){let e=r[0];r.shift(),t(e,l,r,n)}return n}}(this.root,t)}inOrder(t){function e(t,l){if(void 0===l){const l=[];return null===t?l:(l.push(t.value),e(t.left).concat(l.concat(e(t.right))))}null!==t&&(e(t.left,l),l(t.value),e(t.right,l))}if(void 0===t)return e(this.root);e(this.root,t)}preOrder(t){function e(t,l){if(void 0===l){const l=[];return null===t?l:(l.push(t.value),l.concat(e(t.left).concat(e(t.right))))}null!==t&&(l(t.value),e(t.left,l),e(t.right,l))}if(void 0===t)return e(this.root);e(this.root,t)}postOrder(t){function e(t,l){if(void 0===l){const l=[];return null===t?l:(l.push(t.value),e(t.left).concat(e(t.right).concat(l)))}null!==t&&(e(t.left,l),e(t.right,l),l(t.value))}if(void 0===t)return e(this.root);e(this.root,t)}height(t){return"Not found"===this.find(t)?"Can't find the height of a node not in the tree":function t(e){let l=0;if(null===e)return l;if(null===e.left&&null===e.right)return l;{l+=1;let r=t(e.left),n=t(e.right);return r>=n?l+r:l+n}}(this.find(t))}depth(t){return"Not found"===this.find(t)?"Can't find the depth of a node not in the tree":function t(e,l){let r=0;return null===e?r:l>e.value?(r+=1,r+t(e.right,l)):l<e.value?(r+=1,r+t(e.left,l)):r}(this.root,t)}isBalanced(){function t(e){let l=0;if(null===e)return l;if(null===e.left&&null===e.right)return l;{l+=1;let r=t(e.left),n=t(e.right);return r>=n?l+r:l+n}}return function e(l){return null===l||null===l.left&&null===l.right||!(Math.abs(t(l.left)-t(l.right))>1||Math.abs(t(l.right)-t(l.left))>1)&&!(!e(l.left)||!e(l.right))}(this.root)}rebalance(){if(this.isBalanced())return"Tree is already balanced";{const t=this.inOrder();this.root=e(t)}}}const n=(t,e="",l=!0)=>{null!==t&&(null!==t.right&&n(t.right,`${e}${l?"│   ":"    "}`,!1),console.log(`${e}${l?"└── ":"┌── "}${t.value}`),null!==t.left&&n(t.left,`${e}${l?"    ":"│   "}`,!0))};!function(){let t=new r(function(){let t=[];for(let e=0;e<=30;e++){let e=Math.floor(101*Math.random());t.push(e)}return t}());n(t.root),console.log(t.isBalanced(),t.inOrder(),t.preOrder(),t.postOrder()),t.insert(174),t.insert(103),t.insert(145),console.log(t.isBalanced()),t.rebalance(),console.log(t.isBalanced(),t.inOrder(),t.preOrder(),t.postOrder())}()})();